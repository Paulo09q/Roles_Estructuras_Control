@{
    ViewData["Title"] = "Detalles de la Factura";
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Detalles de la Factura</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
</head>
<body>
    <div class="container mt-4">
        <h1 class="text-center">Detalles de la Factura</h1>
        <p>
            <a href="/DetalleFactura/Create" class="btn btn-outline-primary">Crear Nuevo</a>
        </p>

        <!-- Tabla de Detalles de Factura -->
        <table class="table table-responsive table-bordered table-striped" id="tablafactura">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Cantidad</th>
                    <th>Producto</th>
                    <th>Precio</th>
                    <th>Total</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                <!-- Las filas de la factura se insertarán dinámicamente aquí -->
            </tbody>
        </table>

        <!-- Campo oculto para el token anti-falsificación -->
        @Html.AntiForgeryToken()

        <!-- Modal para Ver Detalles -->
        <div class="modal fade" id="detalleModal" tabindex="-1" aria-labelledby="detalleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="detalleModalLabel">Detalles de Factura</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body" id="detalleModalBody">
                        <!-- Contenido del detalle -->
                        <div class="text-center">
                            <div class="spinner-border" role="status">
                                <span class="visually-hidden">Cargando...</span>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal para Editar -->
        <div class="modal fade" id="editarModal" tabindex="-1" aria-labelledby="editarModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editarModalLabel">Editar Factura</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="editarForm">
                            <input type="hidden" id="editId">
                            <input type="hidden" id="editFacturaModelId">
                            <input type="hidden" id="editStockModelsId">
                            <input type="hidden" id="editProductoModelsId">
                            <div class="mb-3">
                                <label for="editCantidad" class="form-label">Cantidad</label>
                                <input type="number" class="form-control" id="editCantidad" required>
                            </div>
                            <div class="mb-3">
                                <label for="editValor" class="form-label">Precio</label>
                                <input type="number" step="0.01" class="form-control" id="editValor" required>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                        <button type="button" class="btn btn-primary" id="guardarEdicion">Guardar Cambios</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal de Confirmación para Eliminar -->
        <div class="modal fade" id="eliminarModal" tabindex="-1" aria-labelledby="eliminarModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="eliminarModalLabel">Confirmar Eliminación</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        ¿Está seguro de que desea eliminar este registro?
                        <input type="hidden" id="eliminarId">
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                        <button type="button" class="btn btn-danger" id="confirmarEliminar">Eliminar</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Pre-inicializar los modales de Bootstrap
        let detalleModal = null;
        let editarModal = null;
        let eliminarModal = null;

        $(document).ready(function() {
            // Inicializar modales
            detalleModal = new bootstrap.Modal(document.getElementById('detalleModal'), {
                keyboard: false,
                backdrop: 'static'
            });

            editarModal = new bootstrap.Modal(document.getElementById('editarModal'), {
                keyboard: false,
                backdrop: 'static'
            });

            eliminarModal = new bootstrap.Modal(document.getElementById('eliminarModal'), {
                keyboard: false,
                backdrop: 'static'
            });

            // Cargar los datos inicialmente
            cargarDatosTabla();

            // Agregar delegación de eventos a nivel de documento
            $(document).on('click', '.editar-btn', function() {
                const id = $(this).attr('data-id');
                editarRegistro(id);
            });

            $(document).on('click', '.detalle-btn', function() {
                const id = $(this).attr('data-id');
                verDetalle(id);
            });

            $(document).on('click', '.eliminar-btn', function() {
                const id = $(this).attr('data-id');
                eliminarRegistro(id);
            });

            // Eventos para botones en modales
            $("#guardarEdicion").on("click", function() {
                guardarEdicion();
            });

            $("#confirmarEliminar").on("click", function() {
                confirmarEliminar();
            });
        });

        // Función para cargar los datos de la tabla
        function cargarDatosTabla() {
            $.ajax({
                url: "/DetalleFactura/Tabla",
                type: "GET",
                dataType: "json",
                success: function(listadetalle) {
                    console.log("Datos recibidos:", listadetalle);

                    let htmlFactura = "";

                    if (listadetalle && listadetalle.length > 0) {
                        $.each(listadetalle, function(index, valor) {
                            console.log(`Ítem ${index + 1}:`, valor);

                            htmlFactura += `
                                <tr>
                                    <td>${index + 1}</td>
                                    <td>${valor.cantidad}</td>
                                    <td>${valor.nombre_Producto}</td>
                                    <td>${valor.precio.toFixed(2)}</td>
                                    <td>${valor.total.toFixed(2)}</td>
                                    <td>
                                        <button type="button" class="btn btn-outline-warning editar-btn" data-id="${valor.id}">Editar</button> |
                                        <button type="button" class="btn btn-outline-info detalle-btn" data-id="${valor.id}">Detalle</button> |
                                        <button type="button" class="btn btn-outline-danger eliminar-btn" data-id="${valor.id}">Eliminar</button>
                                    </td>
                                </tr>
                            `;
                        });
                    } else {
                        htmlFactura = '<tr><td colspan="6" class="text-center">No hay datos disponibles</td></tr>';
                    }

                    $("#tablafactura tbody").html(htmlFactura);
                },
                error: function(xhr, status, error) {
                    console.error("Error al cargar los datos de la tabla de factura:", error);
                    $("#tablafactura tbody").html('<tr><td colspan="6" class="text-center">Error al cargar los datos</td></tr>');
                }
            });
        }

        // Función para ver detalles - CORREGIDA
        function verDetalle(id) {
            console.log("Mostrando detalle de ID:", id);

            // Mostrar el modal primero con un indicador de carga
            $("#detalleModalBody").html('<div class="text-center"><div class="spinner-border" role="status"><span class="visually-hidden">Cargando...</span></div></div>');
            detalleModal.show();

            // Luego realizar la solicitud AJAX
            $.ajax({
                url: `/DetalleFactura/GetById/${id}`,  // Cambiamos a GetById, igual que para editar
                type: "GET",
                dataType: "json",
                success: function(data) {
                    // Construir HTML para mostrar los detalles
                    let detalleHTML = `
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">Detalle #${data.id}</h5>
                                <div class="row mb-2">
                                    <div class="col-4 fw-bold">Producto:</div>
                                    <div class="col-8">${data.nombre_Producto || "No disponible"}</div>
                                </div>
                                <div class="row mb-2">
                                    <div class="col-4 fw-bold">Cantidad:</div>
                                    <div class="col-8">${data.cantidad}</div>
                                </div>
                                <div class="row mb-2">
                                    <div class="col-4 fw-bold">Precio unitario:</div>
                                    <div class="col-8">$${parseFloat(data.valor || 0).toFixed(2)}</div>
                                </div>
                                <div class="row mb-2">
                                    <div class="col-4 fw-bold">Total:</div>
                                    <div class="col-8">$${(parseFloat(data.valor || 0) * parseInt(data.cantidad || 0)).toFixed(2)}</div>
                                </div>
                            </div>
                        </div>
                    `;

                    // Actualizar el contenido del modal
                    $("#detalleModalBody").html(detalleHTML);
                },
                error: function(xhr, status, error) {
                    console.error("Error al cargar detalles:", error);
                    $("#detalleModalBody").html(`
                        <div class="alert alert-danger">
                            Error al cargar los detalles del registro. Por favor, intente nuevamente.
                        </div>
                    `);
                }
            });
        }

        // Función para editar registro
        function editarRegistro(id) {
            console.log("Editando registro con ID:", id);

            $.ajax({
                url: `/DetalleFactura/GetById/${id}`,
                type: "GET",
                dataType: "json",
                success: function(data) {
                    $("#editId").val(data.id);
                    $("#editFacturaModelId").val(data.facturaModelId);
                    $("#editStockModelsId").val(data.stockModelsId);
                    $("#editProductoModelsId").val(data.productoModelsId);
                    $("#editCantidad").val(data.cantidad);
                    $("#editValor").val(data.valor); // Aquí usar "valor" en lugar de "precio"

                    editarModal.show();
                },
                error: function(xhr, status, error) {
                    console.error("Error al cargar datos para editar:", error);
                    alert("Error al cargar los datos para editar");
                }
            });
        }

        // Función para eliminar registro
        function eliminarRegistro(id) {
            console.log("Preparando eliminación de ID:", id);
            $("#eliminarId").val(id);
            eliminarModal.show();
        }

        // Función para guardar edición
        function guardarEdicion() {
            const detalleData = {
                Id: $("#editId").val(),
                FacturaModelId: $("#editFacturaModelId").val(),
                StockModelsId: $("#editStockModelsId").val(),
                ProductoModelsId: $("#editProductoModelsId").val(),
                Cantidad: parseInt($("#editCantidad").val()),
                valor: parseFloat($("#editValor").val()) // Cambiar a "valor" para coincidir con el modelo
            };

            console.log("Enviando datos de edición:", detalleData);

            $.ajax({
                url: "/DetalleFactura/EditJson",
                type: "POST",
                data: JSON.stringify(detalleData),
                contentType: "application/json",
                headers: {
                    "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    console.log("Edición exitosa:", response);
                    if (response.success) {
                        editarModal.hide();
                        cargarDatosTabla();
                        alert("Registro actualizado correctamente");
                    } else {
                        alert("Error al actualizar: " + response.message);
                    }
                },
                error: function(xhr, status, error) {
                    console.error("Error al actualizar:", error);
                    alert("Error al actualizar el registro");
                }
            });
        }

        // Función para confirmar eliminación
        function confirmarEliminar() {
            const id = $("#eliminarId").val();
            console.log("Eliminando registro con ID:", id);

            $.ajax({
                url: `/DetalleFactura/DeleteJson/${id}`,
                type: "POST",
                headers: {
                    "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    console.log("Eliminación exitosa:", response);
                    if (response.success) {
                        eliminarModal.hide();
                        cargarDatosTabla();
                        alert("Registro eliminado correctamente");
                    } else {
                        alert("Error al eliminar: " + response.message);
                    }
                },
                error: function(xhr, status, error) {
                    console.error("Error al eliminar:", error);
                    alert("Error al eliminar el registro");
                }
            });
        }
    </script>
</body>
</html>